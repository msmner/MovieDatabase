@using System.Net.Http
@using Newtonsoft.Json.Linq
@using Microsoft.AspNetCore.Components.Forms
@using Microsoft.JSInterop
@using MovieDatabase.Data.Models;

@inject IJSRuntime JSRuntime
@inject HttpClient Http
@inject NavigationManager NavManager

<h3>ContactComponent</h3>
<EditForm class="text-center" Model="@ContactForm" OnValidSubmit="OnSubmit">
    <DataAnnotationsValidator />
    <div>
        <p>
            <label for="Name">Name</label><br />
            <InputText id="Name" @bind-Value="ContactForm.Name" />
            <ValidationMessage For="@(() => ContactForm.Name)" />
        </p>
    </div>
    <p>
        <label for="Email">Email</label><br />
        <InputText id="Email" @bind-Value="ContactForm.Email" />
        <ValidationMessage For="@(() => ContactForm.Email)" />
    </p>
    <p>
        <label for="Phone">Phone</label><br />
        <InputText id="Phone" @bind-Value="ContactForm.Phone" />
        <ValidationMessage For="@(() => ContactForm.Phone)" />
    </p>
    <p>
        <label for="Message">Message</label><br />
        <InputTextArea id="Message" @bind-Value="ContactForm.Message" rows="3" />
        <ValidationMessage For="@(() => ContactForm.Message)" />
    </p>

    <div>
        <button id="submitBtn" class="btn btn-primary @btnVisibility"
                type="submit">
            Submit
        </button>
        <div class="bg-primary text-light rounded p-2 @sendVisibility">
            <i class="fa fa-cog fa-spin"></i> Sending
        </div>
    </div>
</EditForm>

@if (displaySendAlert == true)
{
    <div id="sendalert" class="alert @alertinfo mt-2">
        <span class="@alerttextclass">@alerttext</span>
    </div>
}

@code {
    private ContactForm ContactForm = new ContactForm();
    private bool displaySendAlert { get; set; } = false;
    private string alertinfo { get; set; }
    private string alerttextclass { get; set; }
    private string alerttext { get; set; }
    private string btnVisibility = "d-block";
    private string sendVisibility = "d-none";
    string google { get; set; }

    protected override async void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            google = await JSRuntime.InvokeAsync<string>("runCaptcha");
            StateHasChanged();
        }
    }

    private async Task OnSubmit()
    {
        ContactForm.ReCaptcha = google;
        btnVisibility = "d-none";
        sendVisibility = "d-inline-block";
        var results = await SubmitForm();

        if (results != "failed")
        {
            var result = JObject.Parse(results);
            if (result.ContainsKey("success") && (bool)result["success"] == true)
            {
                ShowSuccessAlert();
                ContactForm.Name = string.Empty;
                ContactForm.Email = string.Empty;
                ContactForm.Phone = string.Empty;
                ContactForm.Message = string.Empty;
                btnVisibility = "d-block";
                sendVisibility = "d-none";
            }
            else if (result.ContainsKey("message"))
            {
                btnVisibility = "d-block";
                sendVisibility = "d-none";
                ShowErrorAlert((string)result["message"]);
            }
        }
        else
        {
            btnVisibility = "d-block";
            sendVisibility = "d-none";
            ShowErrorAlert("There was a problem submitting the form.");
        }
    }

    private async Task<string> SubmitForm()
    {
        var json = Newtonsoft.Json.JsonConvert.SerializeObject(ContactForm);
        var stringContent = new StringContent(json, System.Text.Encoding.UTF8, "application/json");
        var response = await Http.PostAsync("/Mailer/SendMessage", stringContent);

        if (response.IsSuccessStatusCode)
        {
            var resultContent = response.Content.ReadAsStringAsync().Result;
            return resultContent;
        }
        else
            return "failed";
    }

    private void ShowSuccessAlert()
    {
        displaySendAlert = true;
        alertinfo = "alert-success";
        alerttextclass = "text-success";
        alerttext = "Sent Successfully";
    }

    private void ShowErrorAlert(string message)
    {
        displaySendAlert = true;
        alertinfo = "alert-danger";
        alerttextclass = "text-danger";
        alerttext = message;
    }
}
